// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./data.db"
}

model User {
  id        Int            @id @default(autoincrement())
  name      String         @unique
  email     String
  password  String
  avatar    String?
  posts     Posts[]
  lists     Lists[]
  followers Follows[]      @relation("following")
  following Follows[]      @relation("follower")
  comments  PostComments[]
}

model Lists {
  id     Int     @id @default(autoincrement())
  title  String
  posts  Posts[]
  user   User?   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId Int?
}

model Posts {
  id          Int            @id @default(autoincrement())
  title       String
  img         PostImages[]
  paragraphs  PostText[]
  user        User           @relation(fields: [userId], references: [id])
  userId      Int
  lists       Lists?         @relation(fields: [listsId], references: [id])
  listsId     Int?
  claps       Int?
  comments    Int?
  date        DateTime?      @default(now())
  commentText PostComments[]
}

model PostImages {
  id      Int    @id @default(autoincrement())
  img     String
  posts   Posts? @relation(fields: [postsId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postsId Int?
}

model PostText {
  id      Int    @id @default(autoincrement())
  text    String
  posts   Posts  @relation(fields: [postsId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postsId Int
}

model PostComments {
  id Int @id @default(autoincrement())

  text    String
  posts   Posts  @relation(fields: [postsId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postsId Int
  user    User  @relation(fields: [userId], references: [id])
  userId  Int
}

model Follows {
  follower    User @relation("follower", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("following", fields: [followingId], references: [id])
  followingId Int

  @@id([followerId, followingId])
}
